void HTMLInputElement::initializeTypeInParsing()
{
    ASSERT(m_parsingInProgress);
    ASSERT(!m_inputType);
    ASSERT(!m_inputTypeView);
    const AtomicString& newTypeName = InputType::normalizeTypeName(fastGetAttribute(typeAttr));
    m_inputType = InputType::create(*this, newTypeName);
    m_inputTypeView = m_inputType;
    ensureUserAgentShadowRoot();
    updateTouchEventHandlerRegistry();
    setNeedsWillValidateCheck();
    m_inputType->warnIfValueIsInvalid(fastGetAttribute(valueAttr).string());
    m_inputTypeView->updateView();
}
